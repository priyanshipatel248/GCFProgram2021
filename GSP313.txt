GSP313 : Create and Manage Cloud Resources: Challenge Lab :-


___________________________________________Challenge 1______________________________________________

Task 1: Create a project jumphost instance

instance name: nucleus-jumphost
machine type:  f1 micro machine 
image type  : debain-9


gcloud compute instances create nucleus-jumphost \
          --network nucleus-vpc \
          --zone us-east1-b  \
          --machine-type f1-micro  \
          --image-family debian-9  \
          --image-project debian-cloud \
          
          
          
___________________________________________Challenge 2______________________________________________
Task 2: Create a Kubernetes service cluster

Step-1 Set default zone as us-east1-b

gcloud config set compute/zone us-east1-b

Step-2 now, create cluster name nucleus-webserver1.

gcloud container clusters create nucleus-webserver1

Step-3 Get, authentication credentials for cluster.

gcloud container clusters get-credentials nucleus-webserver1

Step-4 Deploy application to cluster (Deploy hello server from the hello-app conatiner image)

kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:2.0


Step-5 Expose app on port 8080

kubectl expose deployment hello-server --type=LoadBalancer --port 8080


___________________________________________Challenge 3______________________________________________


--->Use the following code to  config webserver.

cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF


Task 3

Step 1
Create instance template

gcloud compute instance-templates create web-server-template \
          --metadata-from-file startup-script=startup.sh \
          --network nucleus-vpc \
          --machine-type g1-small \
          --region us-east1
          
     
 Step 2
 Create Managed instance group
 
 cloud compute instance-groups managed create web-server-group \
          --base-instance-name web-server \
          --size 2 \
          --template web-server-template \
          --region us-east1
          
          
Step 3

Create firewall rule to allow traffic 

gcloud compute firewall-rules create web-server-firewall \
          --allow tcp:80 \
          --network nucleus-vpc
       
       
 Step-4
 Create a health check
 
 
gcloud compute http-health-checks create http-basic-check


Step-5
Create a backend service, and attach the managed instance group.

gcloud compute instance-groups managed \
          set-named-ports web-server-group \
          --named-ports http:80 \
          --region us-east1

gcloud compute backend-services create web-server-backend \
          --protocol HTTP \
          --http-health-checks http-basic-check \
          --global
gcloud compute backend-services add-backend web-server-backend \
          --instance-group web-server-group \
          --instance-group-region us-east1 \
          --global

          
 Step-6
 Create a URL map, and target the HTTP proxy to route requests to your URL map.
 
 
gcloud compute url-maps create web-server-map \
          --default-service web-server-backend
gcloud compute target-http-proxies create http-lb-proxy \
          --url-map web-server-map
 
 
 Step-7
 Create a forwarding rule.
 
 
 gcloud compute forwarding-rules create http-content-rule \
        --global \
        --target-http-proxy http-lb-proxy \
        --ports 80
gcloud compute forwarding-rules list